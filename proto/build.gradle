plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.14'
    id 'idea'
}
group 'com.monquo'
version '1.0-SNAPSHOT'
def grpcVersion = '1.34.1'

repositories {
    mavenCentral()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.24.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


dependencies {
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}" // to run grpc server
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    //implementation "io.grpc:grpc-services:${grpcVersion}"   // reflection
    implementation "com.google.protobuf:protobuf-java-util:3.14.0"
    //implementation "com.fasterxml.jackson.core:jackson-databind:2.12.0" // for JSON tesing peformance
    implementation "javax.annotation:javax.annotation-api:1.3.2" // if you plan to use Java and above. Here I am using Java 15.1
    implementation "org.jetbrains:annotations:20.1.0"
    //compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // for Java 9+

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine' // For testing purposes
}

// if you have source imports issues, add the below
sourceSets.main.java.srcDir new File(buildDir, 'generated/source')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/source')
    }
}

test {
    useJUnitPlatform()
}